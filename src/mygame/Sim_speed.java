/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package mygame;

import com.jme3.math.Vector3f;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import javax.swing.Timer;

/**
 *
 * @author Amir72c
 */
public class Sim_speed extends javax.swing.JDialog {

    /**
     * Creates new form Sim_speed
     */
    public Sim_speed(java.awt.Frame parent, boolean modal, mesh_drawing linked_simulator, Vector3f[] lineVerticies, float[] isworking_data) {
        super(parent, modal);
        initComponents();
        my_linked_simulator=linked_simulator;
        Simulation_length=lineVerticies.length;
        Simulation_position=1;
        my_vector3f=lineVerticies;
        my_isworking_data=isworking_data;
        runner=new Timer((10/Simulation_length),new ActionListener() {

            public void actionPerformed(ActionEvent e) {
                if (Simulation_position<Simulation_length)
                {
                    Simulation_position=Simulation_position+1;
                    my_linked_simulator.refresh_data(my_vector3f, Simulation_position, my_isworking_data);
                    jSlider1.setValue(Simulation_position);
                }
                else
                {
                    isrunning=false;
                    runner.stop();
                    start.setSelected(false);
                }
            }
            });
        jSlider1.setMinimum(1);
        jSlider1.setMaximum(Simulation_length);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        start = new javax.swing.JToggleButton();
        first = new javax.swing.JButton();
        last = new javax.swing.JButton();
        jSlider1 = new javax.swing.JSlider();
        exit = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        start.setText("Start");
        start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startActionPerformed(evt);
            }
        });

        first.setText("First");
        first.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                firstActionPerformed(evt);
            }
        });

        last.setText("Last");
        last.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                lastActionPerformed(evt);
            }
        });

        jSlider1.setValue(0);
        jSlider1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jSlider1MouseClicked(evt);
            }
        });
        jSlider1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jSlider1MouseDragged(evt);
            }
        });

        exit.setText("Exit");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jSlider1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(first)
                        .addGap(18, 18, 18)
                        .addComponent(start, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(last))
                    .addComponent(exit))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(start)
                    .addComponent(first)
                    .addComponent(last))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 37, Short.MAX_VALUE)
                .addComponent(jSlider1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(32, 32, 32)
                .addComponent(exit)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    
    private void startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startActionPerformed
        // TODO add your handling code here:
        if (start.isSelected()){
            runner.start();
            isrunning=true;
        }
        else
        {
            runner.stop();
            isrunning=false;
        }
        
        
    }//GEN-LAST:event_startActionPerformed

    private void jSlider1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseClicked
        // TODO add your handling code here:
        start.setSelected(false);
        runner.stop();
        isrunning=false;
        my_linked_simulator.refresh_data(my_vector3f, jSlider1.getValue(), my_isworking_data);
        Simulation_position=jSlider1.getValue();
    }//GEN-LAST:event_jSlider1MouseClicked

    private void lastActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_lastActionPerformed
        // TODO add your handling code here:
        Simulation_position=Simulation_length;
        my_linked_simulator.refresh_data(my_vector3f, Simulation_position, my_isworking_data);
        jSlider1.setValue(Simulation_position);
    }//GEN-LAST:event_lastActionPerformed

    private void jSlider1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jSlider1MouseDragged
        // TODO add your handling code here:
        start.setSelected(false);
        runner.stop();
        isrunning=false;
        my_linked_simulator.refresh_data(my_vector3f, jSlider1.getValue(), my_isworking_data);
        Simulation_position=jSlider1.getValue();
    }//GEN-LAST:event_jSlider1MouseDragged

    private void firstActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_firstActionPerformed
        // TODO add your handling code here:
        Simulation_position=1;
        my_linked_simulator.refresh_data(my_vector3f, Simulation_position, my_isworking_data);
        jSlider1.setValue(Simulation_position);
    }//GEN-LAST:event_firstActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Sim_speed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Sim_speed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Sim_speed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Sim_speed.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton exit;
    private javax.swing.JButton first;
    private javax.swing.JSlider jSlider1;
    private javax.swing.JButton last;
    private javax.swing.JToggleButton start;
    // End of variables declaration//GEN-END:variables

    boolean isrunning;
    mesh_drawing my_linked_simulator;
    int Simulation_length;
    int Simulation_position;
    Vector3f[] my_vector3f;
    float[] my_isworking_data;
    Timer runner;
    Timer speed_check_timer;
}
